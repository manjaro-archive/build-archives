name: 'Manjaro Builds Archives Action'
description: 'Builds Manjaro Archives'

inputs:
  build-mirror:
    description: 'server to be used for list overlay'
    required: true
  ssh-key:
    description: 'ssh secret key'
    required: true
  boxit-user:
    description: 'boxit login name'
    required: true
  boxit-passphrase:
    description: 'boxit passphrase'
    required: true
  branch:
    description: 'branch repo'
    required: true
  server-host:
    description: 'server IP'
    required: true
  remote-host:
    description: 'host server'
    required: true
  remote-path:
    description: 'path into server'
    required: true
  host-user:
    description: 'server user name'
    required: true

runs:
  using: "composite"
  steps:
    - id: install_build-dependencies
      shell: bash
      run: |
        sudo apt-get update
        sudo apt-get install \
        build-essential \
        cmake \
        fakeroot \
        git \
        libarchive-dev \
        libarchive-tools \
        libcurl4-openssl-dev \
        libgpgme-dev \
        libssl-dev \
        zip \
        qt5-qmake \
        qtbase5-dev
        
    - id: install_boxit
      shell: bash
      run: |
        #Build boxit package
        sudo git clone --depth 1 https://gitlab.manjaro.org/tools/maintenance-tools/boxit.git
        pushd boxit
        pushd boxit
        pushd src
        sudo qmake
        sudo make sub-DBus
        sudo cp DBus/libDBus.a libDBus.a
        sudo make all
        sudo make install
        popd
        sudo echo
        sudo echo 'Build Boxit Done'
        popd
        popd
        
    - id: create_list_pkgs
      shell: bash
      run: |
        # Grab list of overlay 
        [[ ${{ inputs.branch }} == stable ]] && repo=1
        [[ ${{ inputs.branch }} == testing ]] && repo=2
        [[ ${{ inputs.branch }} == unstable ]] && repo=3
        
        # create Boxit working dir
        sudo mkdir -p Boxit
        pushd Boxit
        
        # Overlay packages
        printf "%s\n%s\n%s\n%s\n" "${{ inputs.build-mirror }}" "${{ inputs.boxit-user }}" "${{ inputs.boxit-passphrase }}" "$repo" | sudo boxit init
        find . -name '*.*' | cut -d '.' -f2- | sudo tee -a ${{ inputs.branch }}-repo-list > /dev/null
        sudo sed -i '/^$/d' ${{ inputs.branch }}-repo-list
        sudo sed -i '/boxit/d' ${{ inputs.branch }}-repo-list
        sudo echo $PWD
        popd

    #- id: download_pkgs
     # shell: bash
     # run: |
        # Download files list 
        #cd ~/work/${{ inputs.branch }}-archive/${{ inputs.branch }}-archive/Boxit        
        #url=$(sudo cat ${{ inputs.branch }}-repo-list)
        #for line in $url; do
        #  sudo wget -nc -P packages "https://repo.manjaro.org/repo$line"
        #done
    
    - id: ssh_config
    #- name: prepare_ssh
      shell: bash
      run: |
        mkdir -p ~/.ssh
        touch ~/.ssh/key_server
        chmod 600 ~/.ssh/key_server
        ssh-agent -a /tmp/ssh_agent.sock > /dev/null
    
    - id: upload_pkgs
    #- name: push_to_server
      shell: bash -O extglob {0}
      env:
        SSH_AUTH_SOCK: /tmp/ssh_agent.sock
      run: |
        if [ -z "${{ inputs.ssh-key }}" ]; then 
        echo "## not all credentials given for server"
          exit 0
        fi
        ssh-keyscan -H -t rsa ${{ inputs.server-host }} >> ~/.ssh/known_hosts
        echo "${{ inputs.ssh-key }}" >> ~/.ssh/key_server
        ssh-add ~/.ssh/key_server
        #rsync -vaPzz --stats -e ssh ./*tar ${{ inputs.boxit-target }}
        cat ~/work/unstable-archive/unstable-archive/Boxit/${{ inputs.branch }}-repo-list > ~/list
        echo "Host *" > ~/.ssh/config
        echo "IdentityFile ~/.ssh/key_server" >> ~/.ssh/config
        echo "StrictHostKeyChecking no" >> ~/.ssh/config
        #ssh -v tuxboyeu@vda4900.is.cc "touch /home/tuxboyeu/domains/manjaro.tuxboy.eu/public_html/test2"
        scp -v ~/list tuxboyeu@vda4900.is.cc: /home/tuxboyeu/domains/manjaro.tuxboy.eu/public_html/.${{ inputs.branch }}-repo-list