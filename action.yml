name: 'Manjaro Builds Archives Action'
description: 'Builds Manjaro Archives'

inputs:
  build-mirror:
    description: 'server to be used for list overlay'
    required: true
  ssh-key:
    description: 'ssh secret key'
    required: true
  ssh-passphrase:
    description: 'passphrase for ssh key'
    required: true
  boxit-user:
    description: 'boxit login name'
    required: true
  boxit-passphrase:
    description: 'boxit passphrase'
    required: true
  branch:
    description: 'branch repo'
    required: true

runs:
  using: "composite"
  steps:
    - id: install_build-dependencies
      shell: bash
      run: |
        sudo apt-get update
        sudo apt-get install \
        build-essential \
        cmake \
        fakeroot \
        git \
        libarchive-dev \
        libarchive-tools \
        libcurl4-openssl-dev \
        libgpgme-dev \
        libssl-dev \
        zip \
        qt5-qmake \
        qtbase5-dev
        
    - id: install_boxit
      shell: bash
      run: |
        #Build boxit package
        sudo git clone --depth 1 https://gitlab.manjaro.org/tools/maintenance-tools/boxit.git
        pushd boxit
        pushd boxit
        pushd src
        sudo qmake
        sudo make sub-DBus
        sudo cp DBus/libDBus.a libDBus.a
        sudo make all
        sudo make install
        popd
        sudo echo
        sudo echo 'Build Boxit Done'
        popd
        popd
        
    - id: create_list_pkgs
      shell: bash
      run: |
        # Grab list of overlay 
        [[ ${{ inputs.branch }} == stable ]] && repo=1
        [[ ${{ inputs.branch }} == testing ]] && repo=2
        [[ ${{ inputs.branch }} == unstable ]] && repo=3
        
        # create Boxit working dir
        sudo mkdir -p Boxit
        pushd Boxit
        
        # Overlay packages
        printf "%s\n%s\n%s\n%s\n" "${{ inputs.build-mirror }}" "${{ inputs.boxit-user }}" "${{ inputs.boxit-passphrase }}" "$repo" | sudo boxit init
        find . -path ./.boxit -prune -o -name '*.*' -print | cut -d '.' -f2- | sudo tee -a ${{ inputs.branch }}-repo-list > /dev/null
        sudo sed -i '/^$/d' ${{ inputs.branch }}-repo-list
        sudo cat ${{ inputs.branch }}-repo-list
    
    - id: download_pkgs
      shell: bash
      run: |
        # Download files list 
        url=$(sudo cat ${{ inputs.branch }}-repo-list)
        for line in $url; do
          sudo wget -nc -P packages "https://repo.manjaro.org/repo$line"
        done
        popd
    - id: publish_modules
      shell: bash -O extglob {0}
      run: |
        sudo zip "linux-${{ env.TAG }}-extramodules.zip" ./*.zst ./*.sig
        sudo zip "linux-${{ env.TAG }}-logs.zip" /home/runner/.chrootbuild-logs/*
        echo ${{ github.token }} | gh auth login --with-token
        GITHUB_LINK=${{ env.GITHUB_LINK }}
        gh release upload ${{ env.TAG }} --repo ${GITHUB_REPOSITORY} --clobber ./linux-${{ env.TAG }}-extramodules.zip ./linux-${{ env.TAG }}-logs.zip # ./*.tar
    - name: prepare ssh
      shell: bash
      run: |
        mkdir -p /home/runner/.ssh
        touch /home/runner/.ssh/github_actions
        chmod 600 /home/runner/.ssh/github_actions
        ssh-agent -a /tmp/ssh_agent.sock > /dev/null
    - name: push to boxit
      shell: bash -O extglob {0}
      env:
        SSH_AUTH_SOCK: /tmp/ssh_agent.sock
      run: |
        if [ -z "${{ inputs.boxit-host }}" ] || [ -z "${{ inputs.boxit-target }}" ] || [ -z "${{ inputs.ssh-key }}" ]; then 
          echo "## not all credentials given for boxit push"
          exit 0
        fi
        ssh-keyscan -t rsa ${{ inputs.boxit-host }} >> /home/runner/.ssh/known_hosts
        echo "${{ inputs.ssh-key }}" >> /home/runner/.ssh/github_actions
        ssh-add /home/runner/.ssh/github_actions
        rsync -vaPzz --stats -e ssh ./*tar ${{ inputs.boxit-target }}
